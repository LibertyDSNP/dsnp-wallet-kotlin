{
  "formatVersion": 1,
  "database": {
    "version": 2,
    "identityHash": "a34929f8da88663ed20aadde70517be4",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`address` TEXT NOT NULL, `username` TEXT NOT NULL, `publicKey` TEXT NOT NULL, `cryptoType` INTEGER NOT NULL, `position` INTEGER NOT NULL, `networkType` TEXT NOT NULL, PRIMARY KEY(`address`))",
        "fields": [
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cryptoType",
            "columnName": "cryptoType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "networkType",
            "columnName": "networkType",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "address"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "nodes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `link` TEXT NOT NULL, `networkType` INTEGER NOT NULL, `isDefault` INTEGER NOT NULL, `isActive` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "link",
            "columnName": "link",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "networkType",
            "columnName": "networkType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "assets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assetId` INTEGER NOT NULL, `chainId` TEXT NOT NULL, `metaId` INTEGER NOT NULL, `freeInPlanks` TEXT NOT NULL, `frozenInPlanks` TEXT NOT NULL, `reservedInPlanks` TEXT NOT NULL, `bondedInPlanks` TEXT NOT NULL, `redeemableInPlanks` TEXT NOT NULL, `unbondingInPlanks` TEXT NOT NULL, PRIMARY KEY(`assetId`, `chainId`, `metaId`), FOREIGN KEY(`assetId`, `chainId`) REFERENCES `chain_assets`(`id`, `chainId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assetId",
            "columnName": "assetId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "metaId",
            "columnName": "metaId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "freeInPlanks",
            "columnName": "freeInPlanks",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "frozenInPlanks",
            "columnName": "frozenInPlanks",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reservedInPlanks",
            "columnName": "reservedInPlanks",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bondedInPlanks",
            "columnName": "bondedInPlanks",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "redeemableInPlanks",
            "columnName": "redeemableInPlanks",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unbondingInPlanks",
            "columnName": "unbondingInPlanks",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "assetId",
            "chainId",
            "metaId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_assets_metaId",
            "unique": false,
            "columnNames": [
              "metaId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_assets_metaId` ON `${TABLE_NAME}` (`metaId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chain_assets",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assetId",
              "chainId"
            ],
            "referencedColumns": [
              "id",
              "chainId"
            ]
          }
        ]
      },
      {
        "tableName": "chains",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `parentId` TEXT, `name` TEXT NOT NULL, `icon` TEXT NOT NULL, `prefix` INTEGER NOT NULL, `isEthereumBased` INTEGER NOT NULL, `isTestNet` INTEGER NOT NULL, `hasCrowdloans` INTEGER NOT NULL, `governance` TEXT NOT NULL, `additional` TEXT, `url` TEXT, `overridesCommon` INTEGER, `staking_url` TEXT, `staking_type` TEXT, `history_url` TEXT, `history_type` TEXT, `crowdloans_url` TEXT, `crowdloans_type` TEXT, `governance_url` TEXT, `governance_type` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "prefix",
            "columnName": "prefix",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isEthereumBased",
            "columnName": "isEthereumBased",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isTestNet",
            "columnName": "isTestNet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasCrowdloans",
            "columnName": "hasCrowdloans",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "governance",
            "columnName": "governance",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "additional",
            "columnName": "additional",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "types.url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "types.overridesCommon",
            "columnName": "overridesCommon",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.staking.url",
            "columnName": "staking_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.staking.type",
            "columnName": "staking_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.history.url",
            "columnName": "history_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.history.type",
            "columnName": "history_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.crowdloans.url",
            "columnName": "crowdloans_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.crowdloans.type",
            "columnName": "crowdloans_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.governance.url",
            "columnName": "governance_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalApi.governance.type",
            "columnName": "governance_type",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "chain_nodes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chainId` TEXT NOT NULL, `url` TEXT NOT NULL, `name` TEXT NOT NULL, `orderId` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`chainId`, `url`), FOREIGN KEY(`chainId`) REFERENCES `chains`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chainId",
            "url"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chain_nodes_chainId",
            "unique": false,
            "columnNames": [
              "chainId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_nodes_chainId` ON `${TABLE_NAME}` (`chainId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chains",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chainId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "chain_assets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `chainId` TEXT NOT NULL, `name` TEXT NOT NULL, `symbol` TEXT NOT NULL, `priceId` TEXT, `staking` TEXT NOT NULL, `precision` INTEGER NOT NULL, `icon` TEXT, `type` TEXT, `buyProviders` TEXT, `typeExtras` TEXT, PRIMARY KEY(`chainId`, `id`), FOREIGN KEY(`chainId`) REFERENCES `chains`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "symbol",
            "columnName": "symbol",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "priceId",
            "columnName": "priceId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "staking",
            "columnName": "staking",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "precision",
            "columnName": "precision",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "buyProviders",
            "columnName": "buyProviders",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "typeExtras",
            "columnName": "typeExtras",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chainId",
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chain_assets_chainId",
            "unique": false,
            "columnNames": [
              "chainId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_assets_chainId` ON `${TABLE_NAME}` (`chainId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chains",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chainId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "chain_runtimes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chainId` TEXT NOT NULL, `syncedVersion` INTEGER NOT NULL, `remoteVersion` INTEGER NOT NULL, PRIMARY KEY(`chainId`), FOREIGN KEY(`chainId`) REFERENCES `chains`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "syncedVersion",
            "columnName": "syncedVersion",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteVersion",
            "columnName": "remoteVersion",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chainId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chain_runtimes_chainId",
            "unique": false,
            "columnNames": [
              "chainId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_runtimes_chainId` ON `${TABLE_NAME}` (`chainId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chains",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chainId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "chain_explorers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chainId` TEXT NOT NULL, `name` TEXT NOT NULL, `extrinsic` TEXT, `account` TEXT, `event` TEXT, PRIMARY KEY(`chainId`, `name`), FOREIGN KEY(`chainId`) REFERENCES `chains`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "extrinsic",
            "columnName": "extrinsic",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "account",
            "columnName": "account",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "event",
            "columnName": "event",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chainId",
            "name"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chain_explorers_chainId",
            "unique": false,
            "columnNames": [
              "chainId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_explorers_chainId` ON `${TABLE_NAME}` (`chainId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chains",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chainId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "meta_accounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`substratePublicKey` BLOB, `substrateCryptoType` TEXT, `substrateAccountId` BLOB, `ethereumPublicKey` BLOB, `ethereumAddress` BLOB, `name` TEXT NOT NULL, `isSelected` INTEGER NOT NULL, `position` INTEGER NOT NULL, `type` TEXT NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL)",
        "fields": [
          {
            "fieldPath": "substratePublicKey",
            "columnName": "substratePublicKey",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "substrateCryptoType",
            "columnName": "substrateCryptoType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "substrateAccountId",
            "columnName": "substrateAccountId",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "ethereumPublicKey",
            "columnName": "ethereumPublicKey",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "ethereumAddress",
            "columnName": "ethereumAddress",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isSelected",
            "columnName": "isSelected",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_meta_accounts_substrateAccountId",
            "unique": false,
            "columnNames": [
              "substrateAccountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meta_accounts_substrateAccountId` ON `${TABLE_NAME}` (`substrateAccountId`)"
          },
          {
            "name": "index_meta_accounts_ethereumAddress",
            "unique": false,
            "columnNames": [
              "ethereumAddress"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meta_accounts_ethereumAddress` ON `${TABLE_NAME}` (`ethereumAddress`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "chain_accounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`metaId` INTEGER NOT NULL, `chainId` TEXT NOT NULL, `publicKey` BLOB, `accountId` BLOB NOT NULL, `cryptoType` TEXT, PRIMARY KEY(`metaId`, `chainId`), FOREIGN KEY(`metaId`) REFERENCES `meta_accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "metaId",
            "columnName": "metaId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicKey",
            "columnName": "publicKey",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "cryptoType",
            "columnName": "cryptoType",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "metaId",
            "chainId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_chain_accounts_chainId",
            "unique": false,
            "columnNames": [
              "chainId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_accounts_chainId` ON `${TABLE_NAME}` (`chainId`)"
          },
          {
            "name": "index_chain_accounts_metaId",
            "unique": false,
            "columnNames": [
              "metaId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_accounts_metaId` ON `${TABLE_NAME}` (`metaId`)"
          },
          {
            "name": "index_chain_accounts_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chain_accounts_accountId` ON `${TABLE_NAME}` (`accountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meta_accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metaId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "storage",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`storageKey` TEXT NOT NULL, `content` TEXT, `chainId` TEXT NOT NULL, PRIMARY KEY(`chainId`, `storageKey`))",
        "fields": [
          {
            "fieldPath": "storageKey",
            "columnName": "storageKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chainId",
            "columnName": "chainId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chainId",
            "storageKey"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a34929f8da88663ed20aadde70517be4')"
    ]
  }
}